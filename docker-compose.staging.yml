version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    container_name: ev-booking-staging-postgres
    environment:
      POSTGRES_DB: ev_booking_staging_db
      POSTGRES_USER: ev_staging_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-staging_password}
    ports:
      - "5433:5432"
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
      - ./init-staging.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ev-booking-staging-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ev_staging_user -d ev_booking_staging_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ev-booking-staging-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_staging_data:/data
    networks:
      - ev-booking-staging-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile.staging
    container_name: ev-booking-staging-app
    network_mode: "host"
    environment:
      SPRING_PROFILES_ACTIVE: staging
      DB_HOST: localhost
      DB_PORT: 5433
      DB_NAME: ev_booking_staging_db
      DB_USERNAME: ev_staging_user
      DB_PASSWORD: ${DB_PASSWORD:-staging_password}
      REDIS_HOST: localhost
      REDIS_PORT: 6380
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-staging-super-secret-key}
      MAIL_USERNAME: ${MAIL_USERNAME:-staging@evbooking.com}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-staging_mail_password}
      STRIPE_PUBLIC_KEY: ${STRIPE_PUBLIC_KEY_STAGING:-pk_test_staging}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY_STAGING:-sk_test_staging}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - staging_uploads:/app/uploads
      - staging_logs:/app/logs

  nginx:
    image: nginx:alpine
    container_name: ev-booking-staging-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/staging.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/staging:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - ev-booking-staging-network
    restart: unless-stopped

volumes:
  postgres_staging_data:
  redis_staging_data:
  staging_uploads:
  staging_logs:

networks:
  ev-booking-staging-network:
    driver: bridge